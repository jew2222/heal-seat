generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
 // url      = env("DATABASE_URL")
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection

}

model SMSToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Like {
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
  exerciseId Int
  @@id(name: "id", [userId, exerciseId])
}

//////////////////hEAL sEAT ////////////////

model User {
  id         Int          @id @default(autoincrement())
  username   String       @unique
  email      String?      @unique
  password   String?
  phone      String?      @unique
  avatar     String?
    userRole String
  tokens     SMSToken[]
  likes      Like[]
  plant  String 
 plant_status  String
  last_water_at DateTime   
  bgi   String
  bgm   String
    created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
}

model Exercise {
  id          Int    @id @default(autoincrement())
  title       String
  url          String @unique
  video_id    String
  channel_id  String
  channel_name String
  thumb       String? 
  description String? 
  category    String //"POSTURE" | "EYE"|"LOWER"|"UPPER"
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  like Like[]
}

model Timer {
    id          Int    @id @default(autoincrement())
    created_at DateTime @default(now())
 //   updated_at DateTime @updatedAt
//    user     User      @relation(fields: [userId], references: [id], onDelete: Cascade) // 통계데이터는 서버부하때문에 릴레이션 안건다 
    userId   Int
    today_time DateTime
}
